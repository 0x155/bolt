language: php

php:
  - 5.3
  - 5.4
  - 5.5
  - 5.6
  - 7.0
  - hhvm

matrix:
  fast_finish: true
  allow_failures:
    - php: 7.0
    - php: hhvm

services:
  - mysql

before_install:
  - sudo add-apt-repository -y ppa:nginx/stable
  - sudo apt-get update
  - sudo apt-get --reinstall install -qq language-pack-en language-pack-fr && sudo locale-gen fr_FR
  - sudo apt-get install nginx postfix
  # Set up HHVM 
  - if [[ $TRAVIS_PHP_VERSION =~ ^hhvm ]]; then echo 'xdebug.enable = On' >> /etc/hhvm/php.ini ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^hhvm ]]; then echo 'hhvm.jit = false' >> /etc/hhvm/php.ini ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^hhvm ]]; then sudo sh -c 'echo RUN_AS_USER=\"travis\"  >> /etc/default/hhvm' ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^hhvm ]]; then sudo sh -c 'echo RUN_AS_GROUP=\"travis\" >> /etc/default/hhvm' ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^hhvm ]]; then sudo service hhvm restart ; sleep 1 ; fi
  # Set up PHP-FPM
  - if [[ $TRAVIS_PHP_VERSION =~ ^[57] ]]; then export PHP_BASE=~/.phpenv/versions/$(phpenv version-name) ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^[57] ]]; then echo "cgi.fix_pathinfo = 1" >> $PHP_BASE/etc/php.ini ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^[57] ]]; then sudo cp $PHP_BASE/etc/php-fpm.conf.default $PHP_BASE/etc/php-fpm.conf ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^5 ]]; then perl -p -i -e 's/nobody/travis/g' $PHP_BASE/etc/php-fpm.conf ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^7 ]]; then sudo cp $PHP_BASE/etc/php-fpm.d/www.conf.default $PHP_BASE/etc/php-fpm.d/www.conf ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^7 ]]; then perl -p -i -e 's/nobody/travis/g' $PHP_BASE/etc/php-fpm.d/www.conf ; fi
  - if [[ $TRAVIS_PHP_VERSION =~ ^[57] ]]; then sudo $PHP_BASE/sbin/php-fpm ; fi
  # Set up Nginx
  - PWD=$(pwd) ; perl -p -i -e 's/%ROOTDIR%/$ENV{PWD}/g' .travis.nginx.conf
  - sudo cp .travis.nginx.conf /etc/nginx/nginx.conf
  - sudo service nginx restart
  # Start postfix
  - sudo service postfix restart
  
before_script:
  # Set up Composer 
  - composer self-update || true
  - composer install --prefer-dist
  # Set up permissions
  - chmod -R 777 app/database/ app/cache/ app/config/ extensions/ files/ theme/
  # Set up tests directories
  - mkdir -p tests/phpunit/unit/Nut/resources/
  - chmod 777 tests/phpunit/unit/Nut/resources/
  # Set up MySQL
  - mysql -e "CREATE DATABASE IF NOT EXISTS bolt_travis;" -u root
  - mysql -e "CREATE USER 'bolt_travis'@'localhost' IDENTIFIED BY 'bolt_travis';" -u root
  - mysql -e "GRANT ALL PRIVILEGES ON bolt_travis.* TO 'bolt_travis'@'localhost';" -u root
  - mysql -e "FLUSH PRIVILEGES;" -u root
  # Set up PostgreSQL
  - psql -c "CREATE DATABASE bolt_travis;" -U postgres || true
  - psql -c "CREATE USER bolt_travis WITH PASSWORD 'bolt_travis';" -U postgres
  - psql -c "GRANT ALL PRIVILEGES ON DATABASE bolt_travis TO bolt_travis;" -U postgres

script:
  # PHPUnit
  - phpunit -c phpunit.xml.dist
  # Codeception set up (PHP >5.3)
  - if [[ $TRAVIS_PHP_VERSION =~ (^5.[456]|^7|^hhvm) ]]; then ./vendor/codeception/codeception/codecept build ; fi
  # Codeception Sqlite run (PHP >5.3)
  - if [[ $TRAVIS_PHP_VERSION =~ (^5.[456]|^7|^hhvm) ]]; then ./vendor/codeception/codeception/codecept run ; fi
  # Codeception MySQL run (PHP >5.3)
  - ./tests/scripts/travis-db-config mysql
  - if [[ $TRAVIS_PHP_VERSION =~ (^5.[456]|^7|^hhvm) ]]; then ./vendor/codeception/codeception/codecept run ; fi
  # Codeception PostgreSQL run (PHP >5.3)
  - ./tests/scripts/travis-db-config postgres
  - if [[ $TRAVIS_PHP_VERSION =~ (^5.[456]|^7|^hhvm) ]]; then ./vendor/codeception/codeception/codecept run ; fi

after_script:

# cache vendor dirs
cache:
  directories:
    - vendor
    - $COMPOSER_CACHE_DIR

