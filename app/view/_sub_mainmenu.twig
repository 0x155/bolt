{% import '_macro.twig' as macro %}

<div class="sidebar-collapse">
    <ul class="nav" id="side-menu">
        {% if app.session.get('user') is not null %}

            {# one omnisearch here, for "extra small", the other in the header-navbar #}
            <li class="sidebar-search">
                <form class="navbar-form visible-xs" role="search">
                    <div class="form-group has-feedback">
                        <label class="control-label" for="inputSuccess4">Omnisearch…</label>
                        <input type="text" class="form-control" placeholder="Omnisearch…" >
                        <span class="fa fa-search form-control-feedback"></span>
                    </div>
                </form>
            </li>

            {# Link to Dashboard  #}
            <li class="{% if active in ['', 'dashboard'] %}active {% endif %}"><a href="{{ path('dashboard') }}">
                <span class="fa-stack">
                    <i class="fa fa-square fa-stack-2x"></i>
                    <i class="fa fa-dashboard fa-stack-1x fa-inverse" style="color: #333;"></i>
                </span> 
                {{ __('Dashboard') }}</a>
            </li>

            <hr>
            <span><i class="fa fa-files-o"></i> {{ __('Content') }}</span>

            {# Menu with Contenttypes where show_in_menu is set true #}
            {% for slug, contenttype in app.config.get('contenttypes') %}
                {% if isallowed('contenttype:' ~ slug) and contenttype.show_in_menu %}
                    {% set title = { icon: contenttype.icon|default('th-list'), label: contenttype.name } %}
                    {% set sub = [
                    { icon: contenttype.icon|default('th-list'), label: __('View %contenttypes%', {'%contenttypes%': contenttype.name}), link: path('overview', { 'contenttypeslug': slug }) },
                    { icon: 'plus', label: __('New %contenttype%',{'%contenttype%': contenttype.singular_name}), link: path('editcontent', { 'contenttypeslug': slug, 'id': '' }), isallowed: 'contenttype:' ~ slug ~ ':create' },
                    '-',
                    ] %}
                    {% setcontent records = slug limit 4 %}
                    {% for record in records %}
                        {% set sub = sub|merge([{ icon: 'file-text-o', label: record.excerpt(80, true), link: path('editcontent', { 'contenttypeslug': slug, 'id': record.id }) }]) %}
                    {% endfor %}

                    {{ macro.sidebarblock(title, sub) }}

                {% endif %}
            {% endfor %}

            {# Menu with Contenttypes where show_in_menu is set false #}
            {% set title = { icon: contenttype.icon|default('th-list'), label: __('Other contenttypes') } %}
            {% set sub = [] %}
            {% for slug, contenttype in app.config.get('contenttypes') %}


                {% if isallowed('contenttype:' ~ slug) and not contenttype.show_in_menu %}

                    {% set sub = sub|merge([
                    { icon: contenttype.icon|default('th-list'), label: __('View %contenttypes%', {'%contenttypes%': contenttype.name}), link: path('overview', { 'contenttypeslug': slug }) },
                    { icon: 'plus', label: __('New %contenttype%',{'%contenttype%': contenttype.singular_name}), link: path('editcontent', { 'contenttypeslug': slug, 'id': '' }), isallowed: 'contenttype:' ~ slug ~ ':create' },
                    '-',
                    ]) %}

                {% endif %}

            {% endfor %}
            {{ macro.sidebarblock(title, sub) }}

            <hr>

            {# Menu with all settings #}
            {% if isallowed('settings') %}

            <span><i class="fa fa-cogs"></i> {{ __('Settings') }}</span>

            {% set title = { icon: 'cogs', label: __('Configuration') } %}
            {% set sub = [
                { icon: 'group', label: __('Users'), link: path('users'), isallowed: 'fileedit' },
                { icon: 'cog', label: __('Configuration'), link: path('fileedit', { 'file': 'app/config/config.yml'}), isallowed: 'fileedit' },
                { icon: 'hdd-o', label: __('Contenttypes'), link: path('fileedit', { 'file': 'app/config/contenttypes.yml'}), isallowed: 'fileedit' },
                { icon: 'tags', label: __('Taxonomy'), link: path('fileedit', { 'file': 'app/config/taxonomy.yml'}), isallowed: 'fileedit' },
                '-',
                { icon: 'list', label: __('Menu setup'), link: path('fileedit', { 'file': 'app/config/menu.yml'}), isallowed: 'fileedit' },
                { icon: 'random', label: __('Routing setup'), link: path('fileedit', { 'file': 'app/config/routing.yml'}), isallowed: 'fileedit' }
            ] %}

            {{ macro.sidebarblock(title, sub) }}

            {% if app.extensions.hasMenuoptions %}
                {% set title = { icon: 'cogs', label: __('Extensions') } %}
                {% set sub = [] %}
                {% for extension in app.extensions.getMenuoptions %}
                    {% set sub = sub|merge([{ icon: extension.icon|default('icon-expand'), label: extension.label, link: extension.path }]) %}
                {% endfor %}
                {{ macro.sidebarblock(title, sub) }}
            {% endif %}

            {% set title = { icon: 'cogs', label: __('Maintenance') } %}
            {% set sub = [
                { icon: 'briefcase', label: __('Extensions'), link: path('extensions'), isallowed: 'extensions' },
                { icon: 'wrench', label: __('Check database'), link: path('dbcheck'), isallowed: 'dbupdate' },
                { icon: 'magic', label: __('Clear the cache'), link: path('clearcache'), isallowed: 'clearcache' },
                { icon: 'file', label: __('Activity log'), link: path('activitylog'), isallowed: 'activitylog' }

            ] %}

            {{ macro.sidebarblock(title, sub) }}

            {% set title = { icon: 'folder-open', label: __('File Management') } %}
            {% set sub = [
                { icon: 'desktop', label: __('Extensions'), link: path('files', { 'path': 'theme' }), isallowed: 'files:theme' },
                { icon: 'folder-open', label: __('Uploaded files'), link: path('files', { 'path': 'files'}), isallowed: 'files:uploads' }
            ] %}

            {{ macro.sidebarblock(title, sub) }}

            {% set title = { icon: 'flag', label: __('Translations') } %}
            {% set sub = [
                { icon: 'flag', label: __('Messages'), link: path('translation', { 'domain': 'messages' }), isallowed: 'translation' },
                { icon: 'flag', label: __('Long messages'), link: path('translation', { 'domain': 'infos' }), isallowed: 'translation' },
                { icon: 'flag', label: __('Contenttypes'), link: path('translation', { 'domain': 'contenttypes' }), isallowed: 'translation' }
            ] %}

            {{ macro.sidebarblock(title, sub) }}

            {% endif %}

            <hr>
            <li class="">
                <a href="#" data-action="sidebar.collapse()" id="sidebar-collapse">
                    <i class="fa fa-compress"></i> {{ __('Collapse sidebar') }}
                </a>
            </li>
            <li class="">
                <a href="#" data-action="sidebar.expand()" id="sidebar-expand">
                    <i class="fa fa-expand"></i> {{ __('Expand sidebar') }}
                </a>
            </li>

        {% else %}

            <li class="divider-vertical"></li>

            {# View site #}
            <li>
                <a href="{{ paths.root }}" target="_blank"><i class="fa fa-external-link"></i> {{ __('View site') }}</a>
            </li>

            <li class="divider-vertical"></li>

            {# Login #}
            <li>
                <a href="{{ path('login') }}"><i class="fa fa-signin"></i> {{ __('Login') }}</a>
            </li>
        {% endif %}
    </ul>
    <!-- /#side-menu -->
</div>
<!-- /.sidebar-collapse -->
